h1= "Edit "+event.name
h2= game.name
form(method="post", accept-charset="utf-8")
  fieldset
    input(type="hidden", name="csrf", value=csrf)
    .form-line
      label(for="event_name") Event Name
      br
      - if (messages["name"] && messages["name"].length)
        ul.field-error
          - each msg in messages["name"]
            li!= "Event name " + msg
      input#event_name.title(type="text", name="event_name", value=data.name)
      span.field-status
        span &nbsp;
    .form-line
      label(for="slug") Event Slug
      br
      - if (messages["slug"] && messages["slug"].length)
        ul.field-error
          - each msg in messages["slug"]
            li!= "Slug " + msg
      input#slug.text(type="text", name="slug", value=data.slug)
      input#saved-slug(type="hidden", name="saved_slug", value=event.slug)
      span.field-status
        span &nbsp;
    .form-line
      label(for="event_type") Event Type
      br
      - if (messages["event_type"] && messages["event_type"].length)
        ul.field-error
          - each msg in messages["event_type"]
            li!= "Event type " + msg
      select#event_type.text(size="1", name="event_type")
        option(value="group_register", selected=data.event_type == "group_register") Group Registration
        option(value="player_register", selected=data.event_type == "player_register") Player Registration
      span.field-status
        span &nbsp;
    .form-line.allow_same_group_opponents_line
      label(for="allow_same_group_opponents") Allow Same Group Opponents?
      br
      - if (messages["allow_same_group_opponents"] && messages["allow_same_group_opponents"].length)
        ul.field-error
          - each msg in messages["allow_same_group_opponents"]
            li!= "Allowing same group opponents " + msg
      select#allow_same_group_opponents.text(size="1", name="allow_same_group_opponents")
        option(value="yes", selected=data.allow_same_group_opponents) Yes
        option(value="no", selected=!data.allow_same_group_opponents) No
    .form-line
      label(for="register_type") Registration Type
      br
      - if (messages["register_type"] && messages["register_type"].length)
        ul.field-error
          - each msg in messages["register_type"]
            li!= "Registration type " + msg
      select#register_type.text(size="1", name="register_type")
        option(value="open", selected=data.register_type == "open") Open
        option(value="request", selected=data.register_type == "request") Request
        option(value="invite", selected=data.register_type == "invite") Invite Only
      span.field-status
        span &nbsp;
    .form-line
      label(for="minTeams") Minimum Number of Teams
      br
      - if (messages["minTeams"] && messages["minTeams"].length)
        ul.field-error
          - each msg in messages["minTeams"]
            li!= "Minimum teams " + msg
      input#minTeams.text(type="number", name="minTeams", value=data.minTeams || 1, step=1, min=1)
      span.field-status
        span &nbsp;
    .form-line
      label(for="gametype_name") Game Type
      br
      - if (messages["gametype_name"] && messages["gametype_name"].length)
        ul.field-error
          - each msg in messages["gametype_name"]
            li!= "Game type " + msg
      select#gametype_name.text(size="1", name="gametype_name")
        - each gametype in game.gametypes
          option(value=gametype.name, selected=data.gametype_name == gametype.name)= gametype.name
        option(value="custom", selected=data.gametype_name == "custom") Custom...
      span.field-status
        span &nbsp;
    .form-line#gtform(style= data.gametype_name == "other" ? "" : "display: none;")
      input.marshal(type="hidden", name="marshal", value=data.marshal)
      label Stats
      ul.stats
        li.add
          a.add-stat(href="#!/") add new stat
      label Rating Weights
      ul.weights
        li
          input(type="number", step="0.05", name="weight", value="1")
          | &nbsp;
          label.inline Wins
        li
          input(type="number", step="0.05", name="weight", value="1")
          | &nbsp;
          label.inline Losses
        li
          input(type="number", step="0.05", name="weight", value="1")
          | &nbsp;
          label.inline Ties
    .form-line
      label(for="description") Description
      span.small
        |  (
        a(href="http://daringfireball.net/projects/markdown/syntax", rel="blank") markdown syntax
        |  )
      br
      - if (messages["description"] && messages["description"].length)
        ul.field-error
          - each msg in messages["description"]
            li!= "Description " + msg
      textarea#description(name="description")= data.description || ""
    .form-line
      label(for="rules") Rules
      span.small
        |  (
        a(href="http://daringfireball.net/projects/markdown/syntax", rel="blank") markdown syntax
        |  )
      br
      - if (messages["rules"] && messages["rules"].length)
        ul.field-error
          - each msg in messages["rules"]
            li!= "Rules " + msg
      textarea#rules(name="rules")= data.rules || ""
    - if (!event.startdate || event.startdate > (new Date()).toISOString())
      .form-line
        label Start Date (your time zone)
        span.small
          |  (enter a date and time, the word "now", or leave blank)
        br
        - if (messages["startdate"] && messages["startdate"].length)
          ul.field-error
            - each msg in messages["startdate"]
              li!= "Start date " + msg
        input#startdate_date.text.narrow(type="date", name="startdate_date", value=data.startdate_date)
        input#startdate_time.text.narrow(type="time", name="startdate_time", value=data.startdate_time)
        span.field-status
          span &nbsp;
    - if (!event.enddate || event.enddate > (new Date()).toISOString())
      .form-line
        label(for="enddate") End Date (your time zone)
        span.small
          |  (enter a date and time, the word "now", or leave blank)
        br
        - if (messages["enddate"] && messages["enddate"].length)
          ul.field-error
            - each msg in messages["enddate"]
              li!= "End date " + msg
        input#enddate_date.text.narrow(type="date", name="enddate_date", value=data.enddate_date)
        input#enddate_time.text.narrow(type="time", name="enddate_time", value=data.enddate_time)
        span.field-status
          span &nbsp;
    .form-line
      button.button.positive(type="submit")
        img(src="/css/icons/tick.png",alt="")
        | &#32;Save Event
      a.button.negative(href="#!/back")
        img(src="/css/icons/cross.png",alt="")
        | &#32;Cancel

ul(style="display: none;")
  li#stattype-template
    a.delete-stat(href="#!/") delete
    label.inline Name:
    | &nbsp;
    input(type="text", name="name")
    | &nbsp;
    label.inline Type:
    | &nbsp;
    select(name="type", size="1")
      option(value="integer") Integer
      option(value="float") Float
      option(value="enum") Choice
      option(value="string") String
      option(value="formula") Derived by Formula
    br.hideable
    label.inline.extra-label.hideable(style="display: none;")
    | &nbsp;
    input.full.hideable(type="text", name="extra")
  li#weight-template
    input(type="number", step="0.05", name="weight", value="1")
    | &nbsp;
    label.inline (unnamed)

script(type="text/javascript")
    var GAME_CODE = "#{game.code}";

    $("a[href=#!/back]").bind('click', function (){
        window.location = "/game/#{game.code}/event/#{event.slug}/controls";
    });

script(type="text/javascript",src="/js/validators/eventslug.js")
script(type="text/javascript",src="/js/validators/eventname.js")
script(type="text/javascript",src="/js/validators/eventtype.js")
script(type="text/javascript",src="/js/validators/eventregistertype.js")
script(type="text/javascript",src="/js/validators/eventgametype.js")
script(type="text/javascript",src="/js/validators/eventminteams.js")
script(type="text/javascript",src="/js/validators/eventdates.js")

script(type="text/javascript",src="/js/event_gametype.js")